syntax = "proto3";

package exsync;

service SyncService {

    rpc Ping(ReqPing) returns (Pong) {}

    rpc MakeOrder(ReqMakeOrder) returns (RespMakeOrder) {}

    rpc CancelOrder(ReqCancelOrder) returns (Resp) {}

    rpc GetOrders(ReqOrders) returns (RespOrders) {}

    rpc GetTrades(ReqTrades) returns (RespTrades) {}

    rpc GetDepth(Req) returns (RespDepth) {}

    rpc GetIndex(Req) returns (RespIndex) {}

    rpc GetPosition(Req) returns (RespPosition) {}

    rpc GetBalance(Req) returns (RespBalance) {}
}

enum TradeAction {
    ActionUnkown   = 0;
    OpenLong   = 1;
    OpenShort  = 2;
    CloseLong  = 3;
    CloseShort = 4;
    Buy  = 5;
    Sell = 6;
}

enum PositionType {
    PositionNone = 0;
    Long  = 1;
    Short = 2;
}

enum CurrencyUnit {
    CNY = 0;
    USD = 1;
    BTC = 2;
    LTC = 3;
}

enum OrderStatus {
    StatusUnkown = 0;
    Created   = 1;
    Partial   = 2; //部分成交
    Complete  = 3;
    Canceled  = 4;
    Canceling = 5;
}

message ReqPing {}
message Pong {}

message Req {
    string exname = 1;
}

message Resp {}

message ReqMakeOrder {
    string exname = 1;
    TradeAction tAction = 2;
    double amount = 3;
    double price = 4;
}

message RespMakeOrder {
    Order order = 1;
}

message ReqCancelOrder {
    string exname = 1;
    repeated string ids = 2;
}

message ReqTrades {
    string exname = 1;
    string since = 2;
    int32 num = 3;
}

message ReqOrders {
    string exname = 1;
    repeated string ids = 2;
}

message RespIndex {
    double index = 1;
}

message RespOrders {
    repeated Order orders = 1;
}

message RespTrades {
    repeated Trade trades = 1;
}

message Timestamp {
    int64 seconds = 1;
    int64 nanos = 2;
}

message Order {
    string id = 1;
    TradeAction tAction = 2;
    double amount = 3;
    double price = 4;
    double dealAmount = 5;
    double dealMoney = 6;
    double avgPrice = 7;
    double fee = 8;
    OrderStatus status = 9;
    Timestamp createTime = 10;
}

message Trade {
    string id = 1;
    TradeAction tAction = 2;
    double amount = 3;
    double price = 4;
    double fee = 5;
    Timestamp createTime = 6;
}

message RespDepth {
    repeated Trade asks = 1;
    repeated Trade bids = 2;
}

message Balance {
    double amount = 1;
    double deposit = 2;
    double realProfit = 3;
    double unrealProfit = 4;
    double riskRate = 5;
    CurrencyUnit currency = 6;
}

message Position {
    string id = 1;
    PositionType pType = 2;
    double amount = 3;
    double availableAmount = 4;
    double avgPrice = 5;
    double money = 6;
    double deposit = 7;
    double leverage = 8;
    double forceClosePrice = 9;
}

message RespPosition {
    Position long = 1;
    Position short = 2;
}

message RespBalance {
    Balance balance = 1;
}

message TradePack {
    string exname = 1;

    int64 openTime = 2;
    int64 closeTime = 3;

    double amount = 4;
    double avgPrice = 5;
    double money = 6;
    double tradeNum = 7;

    double buyNum = 8;
    double buyAmount = 9;
    double buyAvgPrice = 10;

    double sellNum = 11;
    double sellAmount = 12;
    double sellAvgPrice = 13;

    double topAvgPrice = 14;
    double buttonAvgPrice = 15;
}

