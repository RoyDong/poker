syntax = "proto3";

package exsync;

service SyncService {

    rpc Ping(ReqPing) returns (Pong) {}

    rpc GetOrder(ReqOrder) returns (RespOrder) {}

    rpc GetTrades(ReqTrades) returns (RespTrades) {}

    rpc GetDepth(Req) returns (RespDepth) {}

    rpc GetIndex(Req) returns (RespIndex) {}

    rpc GetPosition(Req) returns (RespPosition) {}

    rpc GetBalance(Req) returns (RespBalance) {}
}

enum TradeAction {
    OpenLong   = 0;
    OpenShort  = 1;
    CloseLong  = 2;
    CloseShort = 3;
    Buy  = 4;
    Sell = 5;
}

enum PositionType {
    Long  = 0;
    Short = 1;
}

enum CurrencyUnit {
    CNY = 0;
    USD = 1;
    BTC = 2;
    LTC = 3;
}

enum OrderStatus {
    OrderStatusCreated   = 0;
    OrderStatusPartial   = 1; //部分成交
    OrderStatusComplete  = 2;
    OrderStatusCanceled  = 3;
    OrderStatusCanceling = 4;
}

message ReqPing {}
message Pong {}

message Req {
    string exname = 1;
}

message ReqTrades {
    string exname = 1;
    string since = 2;
    int32 num = 3;
}

message ReqOrder {
    string exname = 1;
    string id = 2;
}

message RespIndex {
    double index = 1;
}

message RespOrder {
    Order order = 1;
}

message RespTrades {
    repeated Trade trades = 1;
}

message Timestamp {
    int64 seconds = 1;
    int64 nanos = 2;
}

message Order {
    string id = 1;
    TradeAction taction = 2;
    double amount = 3;
    double price = 4;
    double dealAmount = 5;
    double dealMoney = 6;
    double avgPrice = 7;
    double fee = 8;
    int32 status = 9;
    Timestamp createTime = 10;
}

message Trade {
    string id = 1;
    TradeAction taction = 2;
    double amount = 3;
    double price = 4;
    double fee = 5;
    Timestamp createTime = 6;
}

message RespDepth {
    repeated Order asks = 1;
    repeated Order bids = 2;
}

message Balance {
    double amount = 1;
    double deposit = 2;
    double realProfil = 3;
    double UnrealProfit = 4;
    double RiskRate = 5;
    CurrencyUnit currentcy = 6;
}

message Position {
    string id = 1;
    PositionType ptype = 2;
    double amount = 3;
    double availableAmount = 4;
    double avgPrice = 5;
    double money = 6;
    double deposti = 7;
    double leverge = 8;
    double forceClosePrice = 9;
}

message RespPosition {
    Position long = 1;
    Position short = 2;
}

message RespBalance {
    Balance balance = 1;
}

